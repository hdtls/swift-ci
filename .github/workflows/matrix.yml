name: Matrix

on:
  workflow_call:
    inputs:
      name:
        type: string
        description: "The name of the workflow used for the concurrency group."
        required: true
      matrix_string:
        type: string
        description: "The test matrix definition."
        required: true
    secrets:
      PERSONAL_ACCESS_TOKEN:
        required: true

# We will cancel previously triggered workflow runs
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ inputs.name }}
  cancel-in-progress: true

jobs:
  execute-matrix:
    name: ${{ matrix.config.platform }} (${{ matrix.config.swift_version }} - ${{ matrix.config.os_version }})
    runs-on: ${{ matrix.config.runner }}
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(inputs.matrix_string) }}
    env:
      SWIFT_VERSION: ${{ matrix.config.swift_version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          submodules: true
      - name: Run matrix job (Linux)
        if: ${{ matrix.config.platform == 'Linux' }}
        run: |
          if [ -n "${{ matrix.config.setup_command }}" ]; then
            setup_command_expression="${{ matrix.config.setup_command }} &&"
          else
            setup_command_expression=""
          fi
          if [ -n "${{ secrets.PERSONAL_ACCESS_TOKEN }}" ]; then
            setup_command_expression="$setup_command_expression git config --global --add url.https://x-access-token:${{ secrets.PERSONAL_ACCESS_TOKEN }}@github.com/.insteadOf https://github.com/ &&"
          fi
          workspace="/$(basename ${{ github.workspace }})"
          docker run -v ${{ github.workspace }}:"$workspace" \
            -w "$workspace" \
            -e CI="$CI" \
            -e GITHUB_ACTIONS="$GITHUB_ACTIONS" \
            -e SWIFT_VERSION="${{ matrix.config.swift_version }}" \
            -e setup_command_expression="$setup_command_expression" \
            -e workspace="$workspace" \
            ${{ (contains(matrix.config.swift_version, 'nightly') && 'swiftlang/swift') || 'swift' }}:${{ matrix.config.swift_version }}-${{ matrix.config.os_version }} \
            bash -c "$setup_command_expression ${{ matrix.config.command }} ${{ matrix.config.command_arguments }}"
      - name: Run matrix job (Windows)
        if: ${{ matrix.config.platform == 'Windows' }}
        run: |
          if (-not [string]::IsNullOrEmpty("${{ matrix.config.setup_command }}")) {
              $setup_command_expression = "${{ matrix.config.setup_command }} &"
          } else {
              $setup_command_expression = ""
          }
          if (-not [string]::IsNullOrEmpty("${{ secrets.PERSONAL_ACCESS_TOKEN }}")) {
            setup_command_expression="$setup_command_expression git config --global --add url.https://x-access-token:${{ secrets.PERSONAL_ACCESS_TOKEN }}@github.com/.insteadOf https://github.com/ &"
          }
          if ("${{ matrix.config.swift_version }}".Contains("nightly")) {
            $Image = "swiftlang/swift:${{ matrix.config.swift_version }}-windowsservercore-1809"
          } else {
            $Image = "swift:${{ matrix.config.swift_version }}-windowsservercore-ltsc2022"
          }
          $workspace = "C:\" + (Split-Path ${{ github.workspace }} -Leaf)
          docker run -v ${{ github.workspace }}:$($workspace) `
            -w $($workspace) `
            -e CI=%CI% `
            -e GITHUB_ACTIONS=%GITHUB_ACTIONS% `
            -e SWIFT_VERSION="${{ matrix.config.swift_version }}" `
            -e setup_command_expression=%setup_command_expression% `
            $Image `
            cmd /s /c  "swift --version & powershell Invoke-Expression ""$($setup_command_expression) ${{ matrix.config.command }} ${{ matrix.config.command_arguments }}"""
