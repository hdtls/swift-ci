name: Matrix

on:
  workflow_call:
    inputs:
      name:
        type: string
        description: "The name of the workflow used for the concurrency group."
        required: true
      matrix_string:
        type: string
        description: "The test matrix definition."
        required: true
    secrets:
      PERSONAL_ACCESS_TOKEN:
        required: true

# We will cancel previously triggered workflow runs
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ inputs.name }}
  cancel-in-progress: true

jobs:
  execute-matrix:
    name: ${{ matrix.definitions.platform }} (${{ matrix.definitions.swift_version }} - ${{ matrix.definitions.os_version }})
    runs-on: ${{ matrix.definitions.runner }}
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(inputs.matrix_string) }}
    container:
      image: ${{ contains(matrix.definitions.swift_version, 'nightly') && 'swiftlang/swift' || 'swift' }}:${{ matrix.definitions.swift_version }}-${{ matrix.definitions.os_version }}
    steps:
      - name: Swift version
        run: swift --version

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          submodules: true

      - name: Set environment variables
        run: echo "SWIFT_VERSION=${{ matrix.definitions.swift_version }}" >> $GITHUB_ENV

      - name: Run matrix job (Linux)
        timeout-minutes: 60
        if: ${{ matrix.definitions.platform == 'Linux' }}
        run: |
          if [ -n "${{ secrets.PERSONAL_ACCESS_TOKEN }}" ]; then
            git config --global --add url."https://x-access-token:${{ secrets.PERSONAL_ACCESS_TOKEN }}@github.com/".insteadOf "https://github.com/"
          fi

          ${{ matrix.definitions.pre_build_command }}
          ${{ matrix.definitions.build_command }} ${{ matrix.definitions.build_command_options }}

      - name: Run matrix job (Windows)
        timeout-minutes: 60
        if: ${{ matrix.definitions.platform == 'Windows windowsservercore' }}
        run: |
          mkdir $env:TEMP\scripts
          echo @'
          Set-PSDebug -Trace 1

          # Run the command following `Invoke-Program`.
          # If that command returns a non-zero exit code, return the same exit code from this script.
          function Invoke-Program($Executable) {
            & $Executable @args 2>&1 5>$null

            if ($LastExitCode -ne 0) {
              exit $LastExitCode
            }
          }

          if (-not [string]::IsNullOrEmpty("${{ secrets.PERSONAL_ACCESS_TOKEN }}")) {
            Invoke-Program git config --global --add url."https://x-access-token:${{ secrets.PERSONAL_ACCESS_TOKEN }}@github.com/".insteadOf "https://github.com/"
          }

          ${{ matrix.definitions.pre_build_command }}
          ${{ matrix.definitions.build_command }} ${{ matrix.definitions.build_command_options }}
          '@ >> $env:TEMP\scripts\run.ps1

          powershell.exe -NoLogo -File $env:TEMP\scripts\run.ps1
