name: Unit tests (Linux)

on:
  workflow_call:
    inputs:
      linux_pre_build_command:
        type: string
        default: ""
      linux_build_command:
        type: string
        default: swift test
      linux_build_command_options:
        type: string
        description: "The default arguments passed to swift test in the Linux matrix job. override by versioned build_command_options."
        default: ""
      linux_5_9_enabled:
        type: boolean
        description: "Boolean to enable the Linux 5.9 Swift version matrix job. Defaults to true."
        default: false
      linux_5_9_build_command_options:
        type: string
        description: "The arguments passed to swift test in the Linux 5.9 Swift version matrix job."
        default: ""
      linux_5_10_enabled:
        type: boolean
        description: "Boolean to enable the Linux 5.10 Swift version matrix job. Defaults to true."
        default: false
      linux_5_10_build_command_options:
        type: string
        description: "The arguments passed to swift test in the Linux 5.10 Swift version matrix job."
        default: ""
      linux_6_0_enabled:
        type: boolean
        description: "Boolean to enable the Linux 6.0 Swift version matrix job. Defaults to true."
        default: false
      linux_6_0_build_command_options:
        type: string
        description: "The arguments passed to swift test in the Linux 6.0 Swift version matrix job."
        default: ""
      linux_6_1_enabled:
        type: boolean
        description: "Boolean to enable the Linux 6.1 Swift version matrix job. Defaults to true."
        default: false
      linux_6_1_build_command_options:
        type: string
        description: "The arguments passed to swift test in the Linux 6.1 Swift version matrix job."
        default: ""
      linux_6_2_enabled:
        type: boolean
        description: "Boolean to enable the Linux 6.2 Swift version matrix job. Defaults to true."
        default: false
      linux_6_2_build_command_options:
        type: string
        description: "The arguments passed to swift test in the Linux 6.2 Swift version matrix job."
        default: ""
      linux_nightly_release_enabled:
        type: boolean
        description: "Boolean to enable the Linux nightly release/x.x Swift version matrix job. Defaults to true."
        default: false
      linux_nightly_release_build_command_options:
        type: string
        description: "The arguments passed to swift test in the Linux nightly release/x.x Swift version matrix job."
        default: ""
      linux_nightly_main_enabled:
        type: boolean
        description: "Boolean to enable the Linux nightly main Swift version matrix job. Defaults to true."
        default: false
      linux_nightly_main_build_command_options:
        type: string
        description: "The arguments passed to swift test in the Linux nightly main Swift version matrix job."
        default: ""
    secrets:
      PERSONAL_ACCESS_TOKEN:
        required: false

jobs:
  unit-tests-matrix:
    name: Matrix (Linux)
    runs-on: ubuntu-latest
    outputs:
      tests-matrix: ${{ steps.tests-matrix.outputs.tests-matrix }}
    steps:
      - id: tests-matrix
        env:
          MATRIX_LINUX_PRE_BUILD_COMMAND: ${{ inputs.linux_pre_build_command }}
          MATRIX_LINUX_BUILD_COMMAND: ${{ inputs.linux_build_command}}
          MATRIX_LINUX_BUILD_COMMAND_OPTIONS: ${{ inputs.linux_build_command_options }}
          MATRIX_LINUX_5_9_ENABLED: ${{ inputs.linux_5_9_enabled }}
          MATRIX_LINUX_5_9_BUILD_COMMAND_OPTIONS: ${{ inputs.linux_5_9_build_command_options }}
          MATRIX_LINUX_5_10_ENABLED: ${{ inputs.linux_5_10_enabled }}
          MATRIX_LINUX_5_10_BUILD_COMMAND_OPTIONS: ${{ inputs.linux_5_10_build_command_options }}
          MATRIX_LINUX_6_0_ENABLED: ${{ inputs.linux_6_0_enabled }}
          MATRIX_LINUX_6_0_BUILD_COMMAND_OPTIONS: ${{ inputs.linux_6_0_build_command_options }}
          MATRIX_LINUX_6_1_ENABLED: ${{ inputs.linux_6_1_enabled }}
          MATRIX_LINUX_6_1_BUILD_COMMAND_OPTIONS: ${{ inputs.linux_6_1_build_command_options }}
          MATRIX_LINUX_6_2_ENABLED: ${{ inputs.linux_6_2_enabled }}
          MATRIX_LINUX_6_2_BUILD_COMMAND_OPTIONS: ${{ inputs.linux_6_2_build_command_options }}
          MATRIX_LINUX_NIGHTLY_RELEASE_ENABLED: ${{ inputs.linux_nightly_release_enabled }}
          MATRIX_LINUX_NIGHTLY_RELEASE_BUILD_COMMAND_OPTIONS: ${{ inputs.linux_nightly_release_build_command_options }}
          MATRIX_LINUX_NIGHTLY_MAIN_ENABLED: ${{ inputs.linux_nightly_main_enabled }}
          MATRIX_LINUX_NIGHTLY_MAIN_BUILD_COMMAND_OPTIONS: ${{ inputs.linux_nightly_main_build_command_options }}
        run: |
          echo "tests-matrix=$(curl -s --retry 3 https://raw.githubusercontent.com/hdtls/swift-ci/main/.github/workflows/scripts/generate_matrix.sh | bash)" >> "$GITHUB_OUTPUT"

  unit-tests-linux:
    name: Unit tests
    needs: unit-tests-matrix
    if: ${{ !contains(needs.unit-tests-matrix.outputs.tests-matrix, '"definitions":[]') }}
    uses: hdtls/swift-ci/.github/workflows/matrix_linux.yml@main
    secrets:
      PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
    with:
      name: Unit tests (Linux)
      matrix_string: "${{ needs.unit-tests-matrix.outputs.tests-matrix }}"
