name: Unit tests

on:
  workflow_call:
    inputs:
      machine:
        type: string
        description: "Define the target machine for matrix job actually runs on, there are three values available here: docker (run jobs in docker container), host (run jobs on host directlly), any other values will make jobs run on both docker and host machine. Defaults to docker."
        default: "docker"

      linux_pre_build_command:
        type: string
        default: ""
      linux_build_command:
        type: string
        default: swift test
      linux_build_command_options:
        type: string
        description: "The default arguments passed to swift test in the Linux matrix job. override by versioned build_command_options."
        default: ""
      linux_5_9_enabled:
        type: boolean
        description: "Boolean to enable the Linux 5.9 Swift version matrix job. Defaults to true."
        default: true
      linux_5_9_build_command_options:
        type: string
        description: "The arguments passed to swift test in the Linux 5.9 Swift version matrix job."
        default: ""
      linux_5_10_enabled:
        type: boolean
        description: "Boolean to enable the Linux 5.10 Swift version matrix job. Defaults to true."
        default: true
      linux_5_10_build_command_options:
        type: string
        description: "The arguments passed to swift test in the Linux 5.10 Swift version matrix job."
        default: ""
      linux_6_0_enabled:
        type: boolean
        description: "Boolean to enable the Linux 6.0 Swift version matrix job. Defaults to true."
        default: true
      linux_6_0_build_command_options:
        type: string
        description: "The arguments passed to swift test in the Linux 6.0 Swift version matrix job."
        default: ""
      linux_6_1_enabled:
        type: boolean
        description: "Boolean to enable the Linux 6.1 Swift version matrix job. Defaults to true."
        default: true
      linux_6_1_build_command_options:
        type: string
        description: "The arguments passed to swift test in the Linux 6.1 Swift version matrix job."
        default: ""
      linux_nightly_release_enabled:
        type: boolean
        description: "Boolean to enable the Linux nightly release/x.x Swift version matrix job. Defaults to true."
        default: true
      linux_nightly_release_build_command_options:
        type: string
        description: "The arguments passed to swift test in the Linux nightly release/x.x Swift version matrix job."
        default: ""
      linux_nightly_main_enabled:
        type: boolean
        description: "Boolean to enable the Linux nightly main Swift version matrix job. Defaults to true."
        default: true
      linux_nightly_main_build_command_options:
        type: string
        description: "The arguments passed to swift test in the Linux nightly main Swift version matrix job."
        default: ""

      windows_pre_build_command:
        type: string
        default: ""
      windows_build_command:
        type: string
        default: swift test
      windows_build_command_options:
        type: string
        default: ""
      windows_6_0_enabled:
        type: boolean
        description: "Boolean to enable the Windows 6.0 Swift version matrix job. Defaults to false."
        default: false
      windows_6_0_build_command_options:
        type: string
        description: "The arguments passed to swift test in the Windows 6.0 Swift version matrix job."
        default: ""
      windows_6_1_enabled:
        type: boolean
        description: "Boolean to enable the Windows 6.1 Swift version matrix job. Defaults to false."
        default: false
      windows_6_1_build_command_options:
        type: string
        description: "The arguments passed to swift test in the Windows 6.1 Swift version matrix job."
        default: ""
      windows_nightly_release_enabled:
        type: boolean
        description: "Boolean to enable the Windows nightly (release/x) Swift version matrix job. Defaults to false."
        default: false
      windows_nightly_release_build_command_options:
        type: string
        description: "The arguments passed to swift test in the Windows nightly (release/x) Swift version matrix job."
        default: ""
      windows_nightly_main_enabled:
        type: boolean
        description: "Boolean to enable the Windows nightly (main) Swift version matrix job. Defaults to false."
        default: false
      windows_nightly_main_build_command_options:
        type: string
        description: "The arguments passed to swift test in the Windows nightly (main) Swift version matrix job."
        default: "-"
    secrets:
      PERSONAL_ACCESS_TOKEN:
        required: false

jobs:
  construct-matrix:
    name: Matrix
    runs-on: ubuntu-latest
    outputs:
      linux-test-matrix: ${{ steps.generate-linux-matrix.outputs.linux-test-matrix }}
      windows-test-matrix: ${{ steps.generate-windows-matrix.outputs.windows-test-matrix }}
    steps:
      - id: generate-linux-matrix
        env:
          MATRIX_LINUX_PRE_BUILD_COMMAND: ${{ inputs.linux_pre_build_command }}
          MATRIX_LINUX_BUILD_COMMAND: ${{ inputs.linux_build_command}}
          MATRIX_LINUX_BUILD_COMMAND_OPTIONS: ${{ inputs.linux_build_command_options }}
          MATRIX_LINUX_5_9_ENABLED: ${{ inputs.linux_5_9_enabled }}
          MATRIX_LINUX_5_9_BUILD_COMMAND_OPTIONS: ${{ inputs.linux_5_9_build_command_options }}
          MATRIX_LINUX_5_10_ENABLED: ${{ inputs.linux_5_10_enabled }}
          MATRIX_LINUX_5_10_BUILD_COMMAND_OPTIONS: ${{ inputs.linux_5_10_build_command_options }}
          MATRIX_LINUX_6_0_ENABLED: ${{ inputs.linux_6_0_enabled }}
          MATRIX_LINUX_6_0_BUILD_COMMAND_OPTIONS: ${{ inputs.linux_6_0_build_command_options }}
          MATRIX_LINUX_6_1_ENABLED: ${{ inputs.linux_6_1_enabled }}
          MATRIX_LINUX_6_1_BUILD_COMMAND_OPTIONS: ${{ inputs.linux_6_1_build_command_options }}
          MATRIX_LINUX_NIGHTLY_RELEASE_ENABLED: ${{ inputs.linux_nightly_release_enabled }}
          MATRIX_LINUX_NIGHTLY_RELEASE_BUILD_COMMAND_OPTIONS: ${{ inputs.linux_nightly_release_build_command_options }}
          MATRIX_LINUX_NIGHTLY_MAIN_ENABLED: ${{ inputs.linux_nightly_main_enabled }}
          MATRIX_LINUX_NIGHTLY_MAIN_BUILD_COMMAND_OPTIONS: ${{ inputs.linux_nightly_main_build_command_options }}
        run: |
          echo "linux-test-matrix=$(curl -H 'Authorization: token ${{ secrets.PERSONAL_ACCESS_TOKEN || secrets.GITHUB_TOKEN }}' -H 'Accept: application/vnd.github.v3.raw' -L -s https://raw.githubusercontent.com/hdtls/swift-ci/main/.github/workflows/scripts/generate_matrix.sh | bash)" >> "$GITHUB_OUTPUT"

      - id: generate-windows-matrix
        env:
          MATRIX_MACHINE: ${{ inputs.machine }}

          MATRIX_WINDOWS_PRE_BUILD_COMMAND: ${{ inputs.windows_pre_build_command }}
          MATRIX_WINDOWS_BUILD_COMMAND: ${{ inputs.windows_build_command }}
          MATRIX_WINDOWS_BUILD_COMMAND_OPTIONS: ${{ inputs.windows_build_command_options }}
          MATRIX_WINDOWS_6_0_ENABLED: ${{ inputs.windows_6_0_enabled }}
          MATRIX_WINDOWS_6_0_BUILD_COMMAND_OPTIONS: ${{ inputs.windows_6_0_build_command_options }}
          MATRIX_WINDOWS_6_1_ENABLED: ${{ inputs.windows_6_1_enabled }}
          MATRIX_WINDOWS_6_1_BUILD_COMMAND_OPTIONS: ${{ inputs.windows_6_1_build_command_options }}
          MATRIX_WINDOWS_NIGHTLY_RELEASE_ENABLED: ${{ inputs.windows_nightly_release_enabled }}
          MATRIX_WINDOWS_NIGHTLY_RELEASE_BUILD_COMMAND_OPTIONS: ${{ inputs.windows_nightly_release_build_command_options }}
          MATRIX_WINDOWS_NIGHTLY_MAIN_ENABLED: ${{ inputs.windows_nightly_main_enabled }}
          MATRIX_WINDOWS_NIGHTLY_MAIN_BUILD_COMMAND_OPTIONS: ${{ inputs.windows_nightly_main_build_command_options }}
        run: |
          echo "windows-test-matrix=$(curl -H 'Authorization: token ${{ secrets.PERSONAL_ACCESS_TOKEN || secrets.GITHUB_TOKEN }}' -H 'Accept: application/vnd.github.v3.raw' -L -s https://raw.githubusercontent.com/hdtls/swift-ci/main/.github/workflows/scripts/generate_matrix.sh | bash)" >> "$GITHUB_OUTPUT"

  linux:
    name: Unix tests
    needs: construct-matrix
    # uses: hdtls/swift-ci/.github/workflows/matrix.yml@main
    uses: ./.github/workflows/matrix.yml
    secrets:
      PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
    with:
      name: Unix tests
      platform: Linux
      matrix_string: "${{ needs.construct-matrix.outputs.linux-test-matrix }}"

  windows:
    name: Unix tests
    needs: construct-matrix
    uses: ./.github/workflows/matrix.yml
    secrets:
      PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
    with:
      name: Unix tests
      platform: Windows
      matrix_string: "${{ needs.construct-matrix.outputs.windows-test-matrix }}"
